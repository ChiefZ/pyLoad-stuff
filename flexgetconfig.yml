templates:
  serien:
    pyload:
      api: http://localhost:8888/api
      queue: yes
      username: admin
      password: xxxxx
      parse_url: no
      multiple_hoster: no

    email:
      active: True
    configure_series:
      settings:
        exact: yes
        propers: 3 days
        quality: 720p+
        identified_by: ep
      from:
        listdir: '/media/5a24e136-09b9-48e1-95db-b44d5db3e28a/Medien/TV Shows'        
    manipulate:
      - title:
          replace:
            regexp: (?i)\b(.fancut|.german|.uncut|.extended|.se|.dubbed|.web-dl|.dl|.dts|.dtsd|.ac3|.ac3(d|ld)|.x264.*|.h264.*|.webrip|.bluray.*|.HDTV|.ac3md|.webhd|.720p|.proper.*|.7.1|.5.1)\b
            format: ''
      - title:
          replace:
            regexp: (?i)\b(.*S[0-9]{2}E[0-9]{2}\s)(.*)\b
            format: '\1- \2'

  movies_collector_pyload:
    pyload:
      api: http://localhost:8888/api
      queue: no
      username: admin
      password: xxxxx
      parse_url: no
      multiple_hoster: no
    email:
      active: True
    tmdb_lookup: yes
    imdb_lookup: yes
    imdb_required: yes
    imdb:
      min_score: 6.0
      min_year: 1990
      reject_genres:
        - News
        - Sport
        - Documentary
        - Biography
    manipulate:
      - title:
          replace:
            regexp: (?i)\b(.fancut|.german|.uncut|.extended|.unrated|.se|.dubbed|.web-dl|.dl|.dts|.dtsd|.ac3|.ac3(d|ld)|.x264.*|.h264.*|.webrip|.bluray.*|.HDTV|.ac3md|.webhd|.720p|.proper.*|.7.1|.5.1)\b
            format: ''
      - title:
          replace:
            regexp: (?i)\b(\.)\b
            format: ' '
      - title:
          replace:
            regexp: (?i)\b([0-9]{4})\b
            format: '(\1)'
    regexp:
      reject:
      - \b(1080p)\b: {from: title}
      - \b(COMPLETE)\b: {from: title}
      - \b(Eroti(c|k))\b: {from: title}
      - \b(sub(s|bed))\b: {from: title}
      - \b(XXX)\b: {from: title} 
      - \b(S\d{1,2})\b: {from: title}
      - \b(S\d+E\d+)\b: {from: title}
      - \b(SBS)\b: {from: title}
	  
  movies_queue_pyload:
    pyload:
      api: http://localhost:8888/api
      queue: yes
      username: admin
      password: xxxxx
      parse_url: no
      multiple_hoster: no
    email:
      active: True  
    manipulate:
      - title:
          replace:
            regexp: (?i)\b(.fancut|.german|.uncut|.extended|.unrated|.se|.dubbed|.web-dl|.dl|.dts|.dtsd|.ac3|.ac3(d|ld)|.x264.*|.h264.*|.webrip|.bluray.*|.HDTV|.ac3md|.webhd|.720p|.proper.*|.7.1|.5.1)\b
            format: ''
      - title:
          replace:
            regexp: (?i)\b(\.)\b
            format: ' '
      - title:
          replace:
            regexp: (?i)\b([0-9]{4})\b
            format: '(\1)'
    regexp:
      reject:
      - \b(1080p)\b: {from: title}
      - \b(COMPLETE)\b: {from: title}
      - \b(Eroti(c|k))\b: {from: title}
      - \b(sub(s|bed))\b: {from: title}
      - \b(XXX)\b: {from: title}
      - \b(S\d{1,2})\b: {from: title}
      - \b(S\d+E\d+)\b: {from: title}
      - \b(SBS)\b: {from: title}
	  
schedules:
  - tasks: '*'
    interval:
      minutes: 60
	  
email:
  from: xxxxxxxxxx
  to: xxxxxxxxxxxxx
  smtp_host: smtp.gmail.com
  smtp_port: 587
  smtp_username: xxxxxxx
  smtp_password: xxxxxxx
  smtp_tls: yes
  template: accepted
  
  
tasks:
  movie_queue:
    trakt_list:
      username: xxxx
      password: xxxx
      api_key: eeab23f70c86646b0fba03a4f06aab9d
      movies: watchlist
    imdb_list:
      list: watchlist
      user_id: ur4xxx5915
    rss: http://www.kino.de/rss/charts/
    rss: http://www.rottentomatoes.com/syndication/rss/top_movies.xml
    rss: http://ax.itunes.apple.com/WebObjects/MZStoreServices.woa/ws/RSS/topMovies/xml
    accept_all: yes
    queue_movies: yes	  
  serienjunkies:
    inputs:
      - rss: http://pipes.yahoo.com/pipes/pipe.run?_id=801107ed80ae2f52915110c6036f9f30&_render=rss
    accept_all: yes
    template: serien
    exists_series: /media/5a24e136-09b9-48e1-95db-b44d5db3e28a/Medien/TV Shows  
    serienjunkies:
      language: de
      hoster: ul
  Movies_720p:
    inputs:
      - rss: http://pipes.yahoo.com/pipes/pipe.run?_id=2de34343a7537a92fb224058cf6fe733&_render=rss
    accept_all: no
    template: movies_collector_pyload
    exists_movie: /media/5a24e136-09b9-48e1-95db-b44d5db3e28a/Medien/Movies
  Movies_retail:
    inputs:
      - rss: http://pipes.yahoo.com/pipes/pipe.run?_id=724ee688f42abb176b2f2df4d4b71cae&_render=rss
    accept_all: yes
    template: movies_queue_pyload   
  Movies_search:
    accept_all: no
    template: movies_queue_pyload
    discover:
      what:
        - emit_movie_queue: yes
      from:
        - search_rss: http://pipes.yahoo.com/pipes/pipe.run?_id=76bfcfd8d494b0a138fcd195ca1ba257&_render=rss&search={{search_term}}
      interval: 1 day
